name: CI

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        ports: [ '5432:5432' ]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: blockfreelancer
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 5s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/blockfreelancer?schema=public
      JWT_SECRET: test-secret-ci
      NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID: test-wallet-connect
      NODE_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Prisma migrate
        run: npx prisma migrate deploy

      - name: Generate Prisma client (idempotent)
        run: npx prisma generate

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint -- --no-error-on-unmatched-pattern

      - name: Build (ensure prod build viability)
        run: npm run build

      - name: Start app (background)
        run: npm run start &

      - name: Wait for app
        run: npx wait-on http://localhost:3000

      - name: Playwright install
        run: npx playwright install --with-deps

      - name: E2E tests
        run: npx playwright test --reporter=line

      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore

  contract-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Hardhat compile & test
        run: npm run test:contracts

  fast-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Generate Prisma client
        run: npx prisma generate
      - name: Typecheck
        run: npm run typecheck
      - name: Lint
        run: npm run lint -- --no-error-on-unmatched-pattern
